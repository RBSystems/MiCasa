/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name:
System Name:
System Number:
Programmer:
Comments:
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
// #ENABLE_DYNAMIC
// #SYMBOL_NAME ""
// #HINT ""
// #DEFINE_CONSTANT
// #CATEGORY "" 
 #PRINT_TO_TRACE
// #DIGITAL_EXPAND 
// #ANALOG_SERIAL_EXPAND 
// #OUTPUT_SHIFT 
// #HELP_PDF_FILE ""
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE
// #ENCODING_ASCII
// #ENCODING_UTF16
// #ENCODING_INHERIT_FROM_PARENT
// #ENCODING_INHERIT_FROM_PROGRAM
/*
#HELP_BEGIN
   (add additional lines of help lines)
#HELP_END
*/

#INCLUDEPATH "C:\Dropbox\Simpl#\Rekaas\MiCasa\MiCasa\MiCasa\bin"				
//#INCLUDEPATH "C:\xx"				
 #USER_SIMPLSHARP_LIBRARY "MiCasa"
/*******************************************************************************************
  Include Libraries
  (Uncomment and include additional libraries as needed)
*******************************************************************************************/
// #CRESTRON_LIBRARY ""
// #USER_LIBRARY ""

/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
  (Uncomment and declare inputs and outputs as needed)
*******************************************************************************************/
  DIGITAL_INPUT Poll;
// ANALOG_INPUT 
 STRING_INPUT IpAdress$[50];

// STRING_INPUT 
// BUFFER_INPUT 

 DIGITAL_OUTPUT Working;
// ANALOG_OUTPUT 
 STRING_OUTPUT ErrorTXT;
                     
 MiCasaWorker Micasa;

Function Init()
{
 RegisterDelegate(Micasa,OnError,MyOnError);
}



Callback Function MyOnError(String strError)
{
     ErrorTXT = "Micasa Error: " + strError;
}

PUSH poll
{

	If (Working= OFF)
	{ 
	Working = ON;
	Micasa.PollData();		
	Working = OFF;
	}

}

CHANGE IpAdress$

{
    Micasa.myIPAddress = IpAdress$;
}

Function Main()
{
	WaitForInitializationComplete();
	Init();
}


